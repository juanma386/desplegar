#!/bin/sh
# File: Iniciar


_hoy=$(date +"%m_%d_%Y_%r_%S")
_pwd=$(pwd)
_permisos=$(ls -la *)
logger="$_pwd/./testing.server.log"
public_html="$_pwd/./public_html"
bin="$_pwd/./bin/"
servidor="$bin./servicio.sh"
iniciar="/usr/bin/iniciar"
fileconfig="$_pwd/./config.ini"
FILE="/usr/bin/iniciar"
fileroute="$_pwd/./bin/route.php"
startcheck=$iniciar

errorEjecutando="Error iniciando servicio"
errorDown(){
echo "Error descargando"
}
aplicaTivo(){
echo "Aplicativos instalados ahora iniciar nuevamente"
}
forbiden(){
echo "ERROR chmod files is forbiden"
}


# Integramos datos en esta version 2.09 21042019 yuma2020 Juan Manuel Pedro Villalba
crear_config(){ 
echo " 
servidor=127.0.0.1
puerto=8000
usuario=NOCORRESPONDE
password=NOCORRESPONDE
" > $_pwd/./config.ini
}

echo "
## Sistema de carga para el servidor local
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.4
# @Estado:      Alpha
# @Mail:		hexomedesarrollos@gmail.com
# @Comentario:	Ayudarte a vos amigo que estas del otro lado luchando para entender todo esto, se que es dificil aprender pero todo se logra, acepto donaciones :D
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
"

# Instalar programa
# Verificando servicios de trabajo para el despliegue
ejecutar(){
sh "$servidor"
}
iniciar_carga() {
curl -o $FILE https://raw.githubusercontent.com/juanma386/desplegar/master/iniciar
dos2unix $FILE
chmod +x $FILE
sudo cp iniciar $FILE
}

dosInstaler(){
sudo apt -y update && sudo apt -y install dos2unix && dos2unix $_pwd/./*/servicio.sh
}



createpublic(){
        if [ -d $public_html ];
	then
	mkdir $public_html
        chmod 775 $public_html
	else
	echo "Hay un problema con los permisos, debes resolverlo"
	fi
}


# Agregada una decoración que me gusta mucho:
PrintLogData(){
cat <<EOF


 ##         ######   ###   ##  ##    ##  ##    ## 
 ##         ######   ###   ##  ##    ##  :##  ##: 
 ##           ##     ###:  ##  ##    ##   ##  ##  
 ##           ##     ####  ##  ##    ##   :####:  
 ##           ##     ##:#: ##  ##    ##    ####   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## :#:##  ##    ##    ####   
 ##           ##     ##  ####  ##    ##   :####:  
 ##           ##     ##  :###  ##    ##   ##::##  
 ########   ######   ##   ###  :######:  :##  ##: 
 ########   ######   ##   ###   :####:   ##    ## 

EOF
}


bin(){
	if [ -d "$bin" ];
	then
	echo "Sí, sí existe."
	echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> $logger
    echo "Directorio de ./bin existe OK ".	" [ "$_pwd" ]" >> $logger
    echo "Directorio de ./bin OK ".	" [ "$_pwd" ]"
	else
	echo "No, no existe"
	echo "File does not exist"
	echo "Create Directory"
	mkdir bin
        echo "Directorio de bin creado OK ".      " [ "$_pwd" ]" >> $logger
	fi
}


# Registro del sistema
registro() {

if [ ! -e "$logger" ];
then
echo "Log operative not found init process charging data"
echo "
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.5
# @Estado:      Alpha
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @UpDate:      03:40am 20-03-2020
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
# @Comment:	Un desastre, pero anda bien arreglados algunos errores.
" > $logger

    echo "Finish file logger is created and continue process"
else
    echo "Data file log is existed".	" [ ".$_hoy." ]"
    # echo "Los permisos del archivo" $_permisos
    echo "Data file log is existed".    " [ ".$_hoy." ]" >> $logger
    echo "Los permisos del archivo" $_permisos >> $logger
    PrintLogData
fi
}


SEPARADOR(){
cat <<EOF

#####################################################
#####################################################
#####################################################
#####################################################

EOF
}
SEPARADOR

server() {

if [ ! -e "$servidor" ];
then
    echo "File does not exist sh"
    echo "Download sh deployer to system_".		"[".$_hoy."]"
    curl -o "$servidor" https://raw.githubusercontent.com/juanma386/desplegar/master/bin/servicio.sh
   
    echo "Downloading finish OK"
    echo "Verificando Permisos"
    echo "Downloadings data sh to working deploy ".	" [ ".$_hoy." ]" >> $logger 
    dos2unix $_pwd/./*/servicio.sh
    permisosverificarserver
else
    echo "Data Deploy is existed".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> $logger
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> $logger
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
fi
}
SEPARADOR
# Permisos del servicio.sh
permisosverificarserver(){
if [ ! -x "$servidor" ];
then
echo "Delegando permisos"
echo "Error en permisos del sistema......FAIL".	" [ ".$_hoy." ]" >> $logger 
chmodbin
else
echo "Permisos de ejecución estan correctos"
echo "Permisos de ejecución................OK".	" [ ".$_hoy." ]" >> $logger 
fi
}

chmodbin(){
chmod +x "$servidor" 
}





route() {

if [ ! -e "$fileroute" ]; 
then
    echo "File does not exist"
	echo "Create Directory"
    echo "Route data deploy work download".		"[".$_hoy."]"
	echo "Downloading data in progress"
	curl -o bin/route.php https://pastebin.com/raw/dLFnEQvz
	echo "preparing deployer to inicializated ".	" [ ".$_hoy." ]" >> $logger
	permisosverificarroute
else
    echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> $logger
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> $logger
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
    echo "Listo todo esta instalado y listo para empezar"
fi
}



# Verificando la existencia del archivo bin/servicio.sh

verificar_servicio(){			
if [ ! -e "$servidor" ];
then
    echo "File does not exist sh"
    echo "Download sh deployer to system_".		"[".$_hoy."]"
    curl -o $servidor https://raw.githubusercontent.com/juanma386/desplegar/master/bin/servicio.sh
		server_shell
    echo "Downloading finish OK"
    echo "Verificando Permisos"
    echo "Downloadings data sh to working deploy ".	" [ ".$_hoy." ]" >> $logger 
    dos2unix "$servidor"
    permisosverificarserver
else
    echo "Data Deploy is existed".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> $logger
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> $logger
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
fi
}
verificar_servicio
#sh bin/servicio.sh
# Permisos del servicio.sh
permisosverificarserver(){
if [ ! -x "$servidor" ];
then
echo "Delegando permisos"
echo "Error en permisos del sistema......FAIL".	" [ ".$_hoy." ]" >> $logger 
chmodbin
else
echo "Permisos de ejecución estan correctos"
echo "Permisos de ejecución................OK".	" [ ".$_hoy." ]" >> $logger 
fi
}
chmodbin(){
chmod +x "$servidor" 
}
# Verificando estado de config.ini


check_config() {

if [ ! -e "$fileconfig" ];
then
    echo "File does not exist"
	echo "Al parecer no existe este archivo"
    echo "El archivo config.ini no existe".    " [ ".$_hoy." ]" >> $logger
		crear_config
    echo "configdata deploy work created".             "[".$_hoy."]"

else
    echo "Data is exist in config_ini folder". " [ ".$_hoy." ]"
    echo "Data config_ini deploy is existed  OK ". " [ "$_hoy" ]" >> $logger
    echo "Listo todo esta instalado y listo para desplegar"
fi
}


# Agregado en la version 2.10 24042019
random(){
                shuf -i 1-65555 -n 1
        } 
 cambio_de_puertas=$(random)
 resolver_puerto_ochomil(){
 S1="8000"
 S2=$PORT
 if [ $S1!=$S2 ];
 then
 echo "S1("$S1") no es igual a S2("$S2")"
 echo "Podemos continual con los trabajos de despliegues"
 fi
 if [ $S1=$S1 ];
 then
 echo "S1("$S1") es igual a S1("$S1")"
 echo "Se cambiara toda la configuración para que se brinde un medio donde trabajar comodamente durante el despliegue"
 echo "Se ha cambiado el puerto: S1("$S1") Pedido ".	" [ "$_hoy" ]" >> $logger
 echo "Se ha cambiado el puerto S1("$S1") por el puerto S2("$S2")".	" [ "$_pwd" ]" >> $logger
 find ./* -name "config.ini" -print | xargs sed -i "s/8000/$cambio_de_puertas/g"
 $(iniciar)
 fi
}




# Verificando servicios de trabajo para el despliegue
iniciar_carga(){
$(sudo -v)
$(dos2unix $iniciar)
$(chmod +x $iniciar)
$(sudo cp iniciar $iniciar)
}

check_step() {
if [ ! -e "$startcheck" ];
then
    echo "File does not exist"
        echo "Al parecer no existe este archivo"
    echo "El archivo ".$startcheck." no existe".    " [ ".$_hoy." ]" >> $logger
        iniciar_carga
    echo "configdata deploy work created".             "[".$_hoy."]"
	echo "Para desplegar ejecuta el comando iniciar"

else
    echo "Data is exist in ".$startcheck." folder". " [ ".$_hoy." ]"
    echo "Data ".$startcheck." deploy is existed  OK ". " [ "$_hoy" ]" >> $logger
    echo "Listo todo esta instalado y listo para desplegar"
	echo "Para desplegar ejecuta el comando iniciar"
fi
}




instalar(){


if [ ! -e "$FILE" ];
then
    echo "File does not exist"
    echo "Al parecer no existe este archivo"
    echo "El archivo " $FILE " no existe".    " [ ".$_hoy." ]" >> $logger
        iniciar_carga
    echo "configdata deploy work created".             "[".$_hoy."]"
	echo "Para desplegar ejecuta el comando iniciar"

else
    echo "Data is exist in ".$FILE." folder". " [ ".$_hoy." ]"
    echo "Data ".$FILE." deploy is existed  OK ". " [ "$_hoy" ]" >> $logger
    echo "Listo todo esta instalado y listo para desplegar"
    echo "Todo listo ahora desplegamos el server GO, GO, GO"
fi
}



server && echo "funcion server exec"

route && echo "funcion route exec"
registro && echo "funcion registro exec"
bin && echo "funcion bin exec"


check_config && echo "funcion configuraciones exec"
check_step && echo "funcion checkstep exec"

instalar && echo "funcion instalar exec"
resolver_puerto_ochomil && echo "funcion puerto exec"

dos2unix "$servidor" && echo "Dos to unix file $servidor exec"
ejecutar && echo "funcion ejecutar try exec"
$($servidor) && echo "funcion ejecutar other try exec"

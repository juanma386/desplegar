#!/bin/sh
# File: Deploy.sh
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.4
# @Estado:      Alpha
# @Mail:		hexomedesarrollos@gmail.com
# @Comentario:	Ayudarte a vos amigo que estas del otro lado luchando para entender todo esto, se que es dificil aprender pero todo se logra, acepto donaciones :D
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
'

_hoy=$(date +"%m_%d_%Y_%r_%S")
_pwd=$(pwd)
_permisos=$(ls -la *)	

PrintLogData(){
cat <<EOF


 ##         ######   ###   ##  ##    ##  ##    ## 
 ##         ######   ###   ##  ##    ##  :##  ##: 
 ##           ##     ###:  ##  ##    ##   ##  ##  
 ##           ##     ####  ##  ##    ##   :####:  
 ##           ##     ##:#: ##  ##    ##    ####   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## :#:##  ##    ##    ####   
 ##           ##     ##  ####  ##    ##   :####:  
 ##           ##     ##  :###  ##    ##   ##::##  
 ########   ######   ##   ###  :######:  :##  ##: 
 ########   ######   ##   ###   :####:   ##    ## 

EOF
}

bin(){
	if [ -d bin ];
	then
	echo "Sí, sí existe."
	echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ./bin existe OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ./bin OK ".	" [ "$_pwd" ]"
	else
	echo "No, no existe"
	echo "File does not exist"
	echo "Create Directory"
	mkdir bin
        echo "Directorio de bin creado OK ".      " [ "$_pwd" ]" >> testing.server.log
	fi
}
bin
# Creamos el directorio para trabajar donde iran los archivos public_html

public(){
        if [ -d public_html ];
        then
        echo "Sí, sí existe."
        echo "Data is exist in bin folder".     " [ ".$_hoy." ]"
	echo "Data deploy is existed  OK ". " [ "$_hoy" ]" >> testing.server.log
	echo "Directorio de ./publi_html OK ".      " [ "$_pwd" ]" >> testing.server.log
    	echo "Directorio de ./publi_html OK ".     " [ "$_pwd" ]"#!/bin/sh
# File: Deploy.sh
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.4
# @Estado:      Alpha
# @Mail:		hexomedesarrollos@gmail.com
# @Comentario:	Ayudarte a vos amigo que estas del otro lado luchando para entender todo esto, se que es dificil aprender pero todo se logra, acepto donaciones :D
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
'

_hoy=$(date +"%m_%d_%Y_%r_%S")
_pwd=$(pwd)
_permisos=$(ls -la *)	

PrintLogData(){
cat <<EOF


 ##         ######   ###   ##  ##    ##  ##    ## 
 ##         ######   ###   ##  ##    ##  :##  ##: 
 ##           ##     ###:  ##  ##    ##   ##  ##  
 ##           ##     ####  ##  ##    ##   :####:  
 ##           ##     ##:#: ##  ##    ##    ####   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## :#:##  ##    ##    ####   
 ##           ##     ##  ####  ##    ##   :####:  
 ##           ##     ##  :###  ##    ##   ##::##  
 ########   ######   ##   ###  :######:  :##  ##: 
 ########   ######   ##   ###   :####:   ##    ## 

EOF
}

bin(){
	if [ -d bin ];
	then
	echo "Sí, sí existe."
	echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ./bin existe OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ./bin OK ".	" [ "$_pwd" ]"
	else
	echo "No, no existe"
	echo "File does not exist"
	echo "Create Directory"
	mkdir bin
        echo "Directorio de bin creado OK ".      " [ "$_pwd" ]" >> testing.server.log
	fi
}
bin
# Creamos el directorio para trabajar donde iran los archivos public_html

public(){
        if [ -d public_html ];
        then
        echo "Sí, sí existe."
        echo "Data is exist in bin folder".     " [ ".$_hoy." ]"
	echo "Data deploy is existed  OK ". " [ "$_hoy" ]" >> testing.server.log
	echo "Directorio de ./publi_html OK ".      " [ "$_pwd" ]" >> testing.server.log
    	echo "Directorio de ./publi_html OK ".     " [ "$_pwd" ]"
        else
        echo "No, no existe"
        echo "File does not exist"
        echo "Create Directory"
	mkdir public_html
	chmod 755 public_html
        echo "Directorio de bin creado OK ".      " [ "$_pwd" ]" >> testing.server.log
        exit
	fi
}
#public

createpublic(){
        if [ -d public_html ];
	then
	mkdir public_html
        chmod 775 public_html
	else
	echo "Hay un problema con los permisos, debes resolverlo"
	fi
}
#PrintDataHexome(){ cat >> "EOF" 
#                           EOF}
#PrintDataHexome

# Registro del sistema
registro() {
logger=./testing.server.log
if [ ! -e "$logger" ];
then
echo "Log operative not found init process charging data"
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.1
# @Estado:      Alpha
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
' > testing.server.log

    echo "Finish file logger is created and continue process"
else
    echo "Data file log is existed".	" [ ".$_hoy." ]"
    # echo "Los permisos del archivo" $_permisos
    echo "Data file log is existed".    " [ ".$_hoy." ]" >> testing.server.log
    echo "Los permisos del archivo" $_permisos >> testing.server.log
    PrintLogData
fi
}
registro

#Servidor del sistema de despliegue
server() {
servidor=./bin/server.sh
if [ ! -e "$servidor" ];
then
    echo "File does not exist sh"
    echo "Download sh deployer to system_".		"[".$_hoy."]"
    curl -o bin/server.sh https://pastebin.com/raw/RA8w25Vu
    echo 'Downloading finish OK'
    echo 'Verificando Permisos'
    echo "Downloadings data sh to working deploy ".	" [ ".$_hoy." ]" >> testing.server.log 
    dos2unix $_pwd/./*/server.sh
    permisosverificarserver
else
    echo "Data Deploy is existed".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
fi
}
# Permisos del server.sh
permisosverificarserver(){
if [ ! -x "$_pwd/./*/server.sh" ];
then
echo 'Delegando permisos'
echo "Error en permisos del sistema......FAIL".	" [ ".$_hoy." ]" >> testing.server.log 
chmodbin
else
echo 'Permisos de ejecución estan correctos'
echo "Permisos de ejecución................OK".	" [ ".$_hoy." ]" >> testing.server.log 
fi
}
chmodbin(){
chmod +x bin/server.sh
}
# Ya no es necesario usar esto en la version 2.0
# server

# Archivo Route del sistema de despliegue

route() {
fileroute=./bin/route.php
if [ ! -e "$fileroute" ]; 
then
    echo "File does not exist"
	echo "Create Directory"
	mkdir bin
    echo "Route data deploy work download".		"[".$_hoy."]"
	echo "Downloading data in progress"
	curl -o bin/route.php https://pastebin.com/raw/dLFnEQvz
	echo "preparing deployer to inicializated ".	" [ ".$_hoy." ]" >> testing.server.log
	permisosverificarroute
else
    echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
    echo 'Listo todo esta instalado y listo para empezar'
fi
}
route
# Ejecutamos la tarea derecho viejo
##./bin/server.sh
# Integramos datos en esta version 2.09 21042019 yuma2020 Juan Manuel Pedro Villalba
crear_config(){ 
echo ' 
servidor=127.0.0.1
puerto=8000
usuario=NOCORRESPONDE
password=NOCORRESPONDE
' > config.ini
}
# Ahora creamos el dato para desplegar el sistema.
check_config() {
fileconfig=./config.ini
if [ ! -e "$fileconfig" ];
then
    echo "File does not exist"
	echo "Al parecer no existe este archivo"
    echo "El archivo config.ini no existe".    " [ ".$_hoy." ]" >> testing.server.log
		crear_config
    echo "configdata deploy work created".             "[".$_hoy."]"

else
    echo "Data is exist in config_ini folder". " [ ".$_hoy." ]"
    echo "Data config_ini deploy is existed  OK ". " [ "$_hoy" ]" >> testing.server.log
    echo 'Listo todo esta instalado y listo para desplegar'
fi
}
check_config
# Cargados todos los datos de configuración
puertos_dinamicos_iniciar(){

CFG_FILE=config.ini

SERVER=$(awk -F "=" '/servidor/ {print $2}' "$CFG_FILE")
PORT=$(awk -F "=" '/puerto/ {print $2}' "$CFG_FILE")
USER=$(awk -F "=" '/usuario/ {print $2}' "$CFG_FILE")
PASS=$(awk -F "=" '/password/ {print $2}' "$CFG_FILE")

echo "Che! este es tu Servidor: "$SERVER""
echo "Aquí esta tu Puerto: "$PORT""
echo "Estos datos son aplicables a otros medios que quieras implementar"
echo "Aquí esta tu Usuario: "$USER""
echo "Aquí esta tu Password: "$PASS""

}
iniciarlizar(){

# 
### @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     2.09.2
# @Estado:      Alpha
# @Advertencia  Usar con cautela y bajo propia responsabilidad esta es una version mejorada del desastre V0.0.2
#
#!/bin/sh
# File Server.sh
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.2
# @Estado:      Alpha
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
';
cd `dirname $0`/..
_hoy=$(date +"%m_%d_%Y_%r_%S")
_pwd=$(pwd)

file=./testing.server.log
if [ ! -e "$file" ]; then
    echo "File does not exist"
    echo "Create File inicializated Deploy"." [ "$_hoy" ]"
    echo "Create File inicializated Deploy".    " [ "$_hoy" ]" > testing.server.log
else
    echo "Checking file is exist deployed again"." [ "$_hoy" ]"
    echo "Deployed again executed OK "."  [ "$_hoy" ]" >> testing.server.log
fi


ADDR_PORT=${1:-$SERVER:$PORT}
DOC_ROOT="$_pwd"

php5.6 -S "$ADDR_PORT" -t "$DOC_ROOT/" -f bin/route.php

}
#!/bin/bash
# Agregado en la version 2.10 24042019
random(){
                shuf -i 1-65555 -n 1
        } 
 cambio_de_puertas=$(random)
 resolver_puerto_ochomil(){
 S1='8000'
 S2=$PORT
 if [ $S1!=$S2 ];
 then
 echo "S1('$S1') no es igual a S2('$S2')"
 echo "Podemos continual con los trabajos de despliegues"
 fi
 if [ $S1=$S1 ];
 then
 echo "S1('$S1') es igual a S1('$S1')"
 echo "Se cambiara toda la configuración para que se brinde un medio donde trabajar comodamente durante el despliegue"
 echo "Se ha cambiado el puerto: S1('$S1') Pedido ".	" [ "$_hoy" ]" >> testing.server.log
 echo "Se ha cambiado el puerto S1('$S1') por el puerto S2('$S2')".	" [ "$_pwd" ]" >> testing.server.log
 find ./* -name "config.ini" -print | xargs sed -i "s/8000/$cambio_de_puertas/g"
 fi
}
resolver_puerto_ochomil
puertos_dinamicos_iniciar
iniciarlizar

        else
        echo "No, no existe"
        echo "File does not exist"
        echo "Create Directory"
	mkdir public_html
	chmod 755 public_html
        echo "Directorio de bin creado OK ".      " [ "$_pwd" ]" >> testing.server.log
        exit
	fi
}
#public

createpublic(){
        if [ -d public_html ];
	then
	mkdir public_html
        chmod 775 public_html
	else
	echo "Hay un problema con los permisos, debes resolverlo"
	fi
}
#PrintDataHexome(){ cat >> "EOF" 
#                           EOF}
#PrintDataHexome

# Registro del sistema
registro() {
logger=./testing.server.log
if [ ! -e "$logger" ];
then
echo "Log operative not found init process charging data"
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.1
# @Estado:      Alpha
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
' > testing.server.log

    echo "Finish file logger is created and continue process"
else
    echo "Data file log is existed".	" [ ".$_hoy." ]"
    # echo "Los permisos del archivo" $_permisos
    echo "Data file log is existed".    " [ ".$_hoy." ]" >> testing.server.log
    echo "Los permisos del archivo" $_permisos >> testing.server.log
    PrintLogData
fi
}
registro

#Servidor del sistema de despliegue
server() {
servidor=./bin/server.sh
if [ ! -e "$servidor" ];
then
    echo "File does not exist sh"
    echo "Download sh deployer to system_".		"[".$_hoy."]"
    curl -o bin/server.sh https://pastebin.com/raw/RA8w25Vu
    echo 'Downloading finish OK'
    echo 'Verificando Permisos'
    echo "Downloadings data sh to working deploy ".	" [ ".$_hoy." ]" >> testing.server.log 
    dos2unix $_pwd/./*/server.sh
    permisosverificarserver
else
    echo "Data Deploy is existed".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
fi
}
# Permisos del server.sh
permisosverificarserver(){
if [ ! -x "$_pwd/./*/server.sh" ];
then
echo 'Delegando permisos'
echo "Error en permisos del sistema......FAIL".	" [ ".$_hoy." ]" >> testing.server.log 
chmodbin
else
echo 'Permisos de ejecución estan correctos'
echo "Permisos de ejecución................OK".	" [ ".$_hoy." ]" >> testing.server.log 
fi
}
chmodbin(){
chmod +x bin/server.sh
}

server

# Archivo Route del sistema de despliegue

route() {
fileroute=./bin/route.php
if [ ! -e "$fileroute" ]; 
then
    echo "File does not exist"
	echo "Create Directory"
	mkdir bin
    echo "Route data deploy work download".		"[".$_hoy."]"
	echo "Downloading data in progress"
	curl -o bin/route.php https://pastebin.com/raw/dLFnEQvz
	echo "preparing deployer to inicializated ".	" [ ".$_hoy." ]" >> testing.server.log
	permisosverificarroute
else
    echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
    echo 'Listo todo esta instalado y listo para empezar'
fi
}
route
# Ejecutamos la tarea derecho viejo
##./bin/server.sh
crear_config(){ 
echo ' 
servidor=127.0.0.1
puerto=8000
usuario=NULL
password=NULL
' > config.ini
}
check_config() {
fileconfig=./config.ini
if [ ! -e "$fileconfig" ];
then
    echo "File does not exist"
	echo "Al parecer no existe este archivo"
    echo "El archivo config.ini no existe".    " [ ".$_hoy." ]" >> testing.server.log
		crear_config
    echo "configdata deploy work created".             "[".$_hoy."]"

else
    echo "Data is exist in config_ini folder". " [ ".$_hoy." ]"
    echo "Data config_ini deploy is existed  OK ". " [ "$_hoy" ]" >> testing.server.log
    echo 'Listo todo esta instalado y listo para desplegar'
fi
}
check_config
# Cargados todos los datos de configuración
iniciarlizar(){
sh bin/server.sh
}
iniciarlizar
#!/bin/sh
# File: Deploy.sh
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.4
# @Estado:      Alpha
# @Mail:		hexomedesarrollos@gmail.com
# @Comentario:	Ayudarte a vos amigo que estas del otro lado luchando para entender todo esto, se que es dificil aprender pero todo se logra, acepto donaciones :D
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
'

_hoy=$(date +"%m_%d_%Y_%r_%S")
_pwd=$(pwd)
_permisos=$(ls -la *)	

PrintLogData(){
cat <<EOF


 ##         ######   ###   ##  ##    ##  ##    ## 
 ##         ######   ###   ##  ##    ##  :##  ##: 
 ##           ##     ###:  ##  ##    ##   ##  ##  
 ##           ##     ####  ##  ##    ##   :####:  
 ##           ##     ##:#: ##  ##    ##    ####   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## ## ##  ##    ##    :##:   
 ##           ##     ## :#:##  ##    ##    ####   
 ##           ##     ##  ####  ##    ##   :####:  
 ##           ##     ##  :###  ##    ##   ##::##  
 ########   ######   ##   ###  :######:  :##  ##: 
 ########   ######   ##   ###   :####:   ##    ## 

EOF
}

bin(){
	if [ -d bin ];
	then
	echo "Sí, sí existe."
	echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ./bin existe OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ./bin OK ".	" [ "$_pwd" ]"
	else
	echo "No, no existe"
	echo "File does not exist"
	echo "Create Directory"
	mkdir bin
        echo "Directorio de bin creado OK ".      " [ "$_pwd" ]" >> testing.server.log
	fi
}
bin
# Creamos el directorio para trabajar donde iran los archivos public_html

public(){
        if [ -d public_html ];
        then
        echo "Sí, sí existe."
        echo "Data is exist in bin folder".     " [ ".$_hoy." ]"
	echo "Data deploy is existed  OK ". " [ "$_hoy" ]" >> testing.server.log
	echo "Directorio de ./publi_html OK ".      " [ "$_pwd" ]" >> testing.server.log
    	echo "Directorio de ./publi_html OK ".     " [ "$_pwd" ]"
        else
        echo "No, no existe"
        echo "File does not exist"
        echo "Create Directory"
	mkdir public_html
	chmod 755 public_html
        echo "Directorio de bin creado OK ".      " [ "$_pwd" ]" >> testing.server.log
        exit
	fi
}
#public

createpublic(){
        if [ -d public_html ];
	then
	mkdir public_html
        chmod 775 public_html
	else
	echo "Hay un problema con los permisos, debes resolverlo"
	fi
}
#PrintDataHexome(){ cat >> "EOF" 
#                           EOF}
#PrintDataHexome

# Registro del sistema
registro() {
logger=./testing.server.log
if [ ! -e "$logger" ];
then
echo "Log operative not found init process charging data"
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.1
# @Estado:      Alpha
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
' > testing.server.log

    echo "Finish file logger is created and continue process"
else
    echo "Data file log is existed".	" [ ".$_hoy." ]"
    # echo "Los permisos del archivo" $_permisos
    echo "Data file log is existed".    " [ ".$_hoy." ]" >> testing.server.log
    echo "Los permisos del archivo" $_permisos >> testing.server.log
    PrintLogData
fi
}
registro

#Servidor del sistema de despliegue
server() {
servidor=./bin/server.sh
if [ ! -e "$servidor" ];
then
    echo "File does not exist sh"
    echo "Download sh deployer to system_".		"[".$_hoy."]"
    curl -o bin/server.sh https://pastebin.com/raw/RA8w25Vu
    echo 'Downloading finish OK'
    echo 'Verificando Permisos'
    echo "Downloadings data sh to working deploy ".	" [ ".$_hoy." ]" >> testing.server.log 
    dos2unix $_pwd/./*/server.sh
    permisosverificarserver
else
    echo "Data Deploy is existed".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
fi
}
# Permisos del server.sh
permisosverificarserver(){
if [ ! -x "$_pwd/./*/server.sh" ];
then
echo 'Delegando permisos'
echo "Error en permisos del sistema......FAIL".	" [ ".$_hoy." ]" >> testing.server.log 
chmodbin
else
echo 'Permisos de ejecución estan correctos'
echo "Permisos de ejecución................OK".	" [ ".$_hoy." ]" >> testing.server.log 
fi
}
chmodbin(){
chmod +x bin/server.sh
}
# Ya no es necesario usar esto en la version 2.0
# server

# Archivo Route del sistema de despliegue

route() {
fileroute=./bin/route.php
if [ ! -e "$fileroute" ]; 
then
    echo "File does not exist"
	echo "Create Directory"
	mkdir bin
    echo "Route data deploy work download".		"[".$_hoy."]"
	echo "Downloading data in progress"
	curl -o bin/route.php https://pastebin.com/raw/dLFnEQvz
	echo "preparing deployer to inicializated ".	" [ ".$_hoy." ]" >> testing.server.log
	permisosverificarroute
else
    echo "Data is exist in bin folder".	" [ ".$_hoy." ]"
    echo "Data deploy is existed  OK ".	" [ "$_hoy" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]" >> testing.server.log
    echo "Directorio de ejecución OK ".	" [ "$_pwd" ]"
    echo 'Listo todo esta instalado y listo para empezar'
fi
}
route
# Ejecutamos la tarea derecho viejo
##./bin/server.sh
# Integramos datos en esta version 2.09 21042019 yuma2020 Juan Manuel Pedro Villalba
crear_config(){ 
echo ' 
servidor=127.0.0.1
puerto=8000
usuario=NOCORRESPONDE
password=NOCORRESPONDE
' > config.ini
}
# Ahora creamos el dato para desplegar el sistema.
check_config() {
fileconfig=./config.ini
if [ ! -e "$fileconfig" ];
then
    echo "File does not exist"
	echo "Al parecer no existe este archivo"
    echo "El archivo config.ini no existe".    " [ ".$_hoy." ]" >> testing.server.log
		crear_config
    echo "configdata deploy work created".             "[".$_hoy."]"

else
    echo "Data is exist in config_ini folder". " [ ".$_hoy." ]"
    echo "Data config_ini deploy is existed  OK ". " [ "$_hoy" ]" >> testing.server.log
    echo 'Listo todo esta instalado y listo para desplegar'
fi
}
check_config
# Cargados todos los datos de configuración
puertos_dinamicos_iniciar(){

CFG_FILE=config.ini

SERVER=$(awk -F "=" '/servidor/ {print $2}' "$CFG_FILE")
PORT=$(awk -F "=" '/puerto/ {print $2}' "$CFG_FILE")
USER=$(awk -F "=" '/usuario/ {print $2}' "$CFG_FILE")
PASS=$(awk -F "=" '/password/ {print $2}' "$CFG_FILE")

echo "Che! este es tu Servidor: "$SERVER""
echo "Aquí esta tu Puerto: "$PORT""
echo "Estos datos son aplicables a otros medios que quieras implementar"
echo "Aquí esta tu Usuario: "$USER""
echo "Aquí esta tu Password: "$PASS""

}
iniciarlizar(){

# 
### @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     2.09.2
# @Estado:      Alpha
# @Advertencia  Usar con cautela y bajo propia responsabilidad esta es una version mejorada del desastre V0.0.2
#
#!/bin/sh
# File Server.sh
echo '
## Part Deploy working
##
## @author      Villalba Juan Manuel Pedro <https://github.com/juanma386>
# @Version:     0.0.2
# @Estado:      Alpha
# @Destino:     Deploy Server Php Linux
# @Date:        05:41pm 14-09-2017
# @Advertencia  Usar con cautela y bajo propia responsabilidad
# @Licence:     GPLv2 Free Software Foundation <licensing@fsf.org>
';
cd `dirname $0`/..
_hoy=$(date +"%m_%d_%Y_%r_%S")
_pwd=$(pwd)

file=./testing.server.log
if [ ! -e "$file" ]; then
    echo "File does not exist"
    echo "Create File inicializated Deploy"." [ "$_hoy" ]"
    echo "Create File inicializated Deploy".    " [ "$_hoy" ]" > testing.server.log
else
    echo "Checking file is exist deployed again"." [ "$_hoy" ]"
    echo "Deployed again executed OK "."  [ "$_hoy" ]" >> testing.server.log
fi


ADDR_PORT=${1:-$SERVER:$PORT}
DOC_ROOT="$_pwd"

php -S "$ADDR_PORT" -t "$DOC_ROOT/" -f bin/route.php

}
#!/bin/bash
# Agregado en la version 2.10 24042019
random(){
                shuf -i 1-65555 -n 1
        } 
 cambio_de_puertas=$(random)
 resolver_puerto_ochomil(){
 S1='8000'
 S2=$PORT
 if [ $S1!=$S2 ];
 then
 echo "S1('$S1') no es igual a S2('$S2')"
 echo "Podemos continual con los trabajos de despliegues"
 fi
 if [ $S1=$S1 ];
 then
 echo "S1('$S1') es igual a S1('$S1')"
 echo "Se cambiara toda la configuración para que se brinde un medio donde trabajar comodamente durante el despliegue"
 echo "Se ha cambiado el puerto: S1('$S1') Pedido ".	" [ "$_hoy" ]" >> testing.server.log
 echo "Se ha cambiado el puerto S1('$S1') por el puerto S2('$S2')".	" [ "$_pwd" ]" >> testing.server.log
 find ./* -name "config.ini" -print | xargs sed -i "s/8000/$cambio_de_puertas/g"
 fi
}
resolver_puerto_ochomil
puertos_dinamicos_iniciar
iniciarlizar
